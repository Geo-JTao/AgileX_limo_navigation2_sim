amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 10.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

amcl_map_client:
  ros__parameters:
    use_sim_time: True

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    # BT执行的每次迭代的持续时间（以毫秒为单位）
    bt_loop_duration: 10
    # BT操作节点等待动作服务器确认的默认超时时间（毫秒）
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    
    # 指定使用自定义行为树（障碍未清除时持续等待）
    # default_nav_to_pose_bt_xml: "package://custom_nav_planners/behavior_trees/my_nav_tree.xml"
    # default_nav_through_poses_bt_xml: "package://custom_nav_planners/behavior_trees/my_nav_through_poses_tree.xml"
    default_nav_to_pose_bt_xml: "/home/robot/robot_ws/src/custom_nav_planners/behavior_trees/my_nav_tree.xml"
    default_nav_through_poses_bt_xml: "/home/robot/robot_ws/src/custom_nav_planners/behavior_trees/my_nav_through_poses_tree.xml"
    
    # 行为树节点共享库的列表
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    # 最小线速度阈值（m/s），低于此值视为机器人停止
    min_x_velocity_threshold: 0.001
    # 最小横向速度阈值（m/s），用于全向移动机器人
    min_y_velocity_threshold: 0.35
    # min_y_velocity_threshold: 0.15
    # 最小角速度阈值（rad/s），低于此值视为机器人停止旋转
    min_theta_velocity_threshold: 0.001
    # 进度检查插件（支持列表形式多插件）
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    # 目标检查插件
    goal_checker_plugins: ["goal_checker"]
    # 路径跟踪控制器插件
    controller_plugins: ["FollowPath"]

    progress_checker:
      # 检测机器人是否长时间未移动（如被障碍物阻挡）
      plugin: "nav2_controller::SimpleProgressChecker"
      # 机器人必须在 movement_time_allowance 时间内移动的最小距离（米），否则判定为卡住。
      required_movement_radius: 0.5
      # 允许机器人停滞的时间（秒），超时触发恢复行为（如清除代价地图）
      # movement_time_allowance: 10.0
      movement_time_allowance: 30.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05
      yaw_goal_tolerance: 0.10
      stateful: True
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      # 要使用的期望最大线性速度
      desired_linear_vel: 0.5
      # 当 use_velocity_scaled_lookahead_dist 为 false 时，用于寻找前瞻点的前瞻距离（米）
      lookahead_dist: 0.6
      # 当 use_velocity_scaled_lookahead_dist 为 true 时，最小/大前瞻距离（米）阈值
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      # 当 use_velocity_scaled_lookahead_dist 为 true 时，将速度投影的时间（秒）。也称为前瞻增益。
      lookahead_time: 1.5
      # 如果“use_rotate_to_heading”为“true”，则使用此角速度。
      rotate_to_heading_angular_vel: 1.8
      # TF变换容差（秒）。
      transform_tolerance: 0.1
      # 是否使用基于速度缩放的前瞻距离或常数“前瞻距离“
      use_velocity_scaled_lookahead_dist: false
      # 在接近目标时应用的最小速度阈值（米/秒），以确保进展。必须为“> 0.01”。
      min_approach_linear_velocity: 0.05
      # 开始减速的路径剩余距离（米）。应小于代价地图宽度的一半
      approach_velocity_scaling_dist: 0.6
      # 是否启用碰撞检测
      use_collision_detection: true
      # 新增参数：设置最小安全距离，若障碍物距离 <= 此值，线速度强制为0
      min_obstacle_dist: 0.2  # 单位：米，根据机器人尺寸调整
      collision_protection_type: "stop" 
      # 最大允许碰撞时间
      max_allowed_time_to_collision_up_to_carrot: 1.0
      # 是否使用规范化特征来计算路径曲率（例如，在高曲率路径上减速）
      use_regulated_linear_velocity_scaling: false
      # 是否使用规范化特征来计算与障碍物的接近度（例如，在靠近障碍物时减速）
      use_cost_regulated_linear_velocity_scaling: false
      use_fixed_curvature_lookahead: false
      # 当``use_regulated_linear_velocity_scaling``为``true``时触发规则特性的转弯半径（米）。转弯越急，半径越小。
      curvature_lookahead_dist: 0.25
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      # 是否启用旋转到粗略朝向和目标朝向。建议对所有可以原地旋转的机器人类型进行启用
      use_rotate_to_heading: true
      # 允许机器人在路径规划需要倒车时倒车行驶（通过方向拐点表示）
      # use_rotate_to_heading``和``allow_reversing``不能同时设置为``true
      allow_reversing: false
      # 如果“use_rotate_to_heading”为“true”，则路径方向和起始机器人方向之间的差异（以弧度表示），触发原地旋转
      # rotate_to_heading_min_angle: 0.785 # 约等于45度
      rotate_to_heading_min_angle: 0.1 # 5度 
      # 如果“use_rotate_to_heading”为“true”，则旋转到目标方向时的最大允许角加速度
      # max_angular_accel: 3.2
      max_angular_accel: 5.2
      # 在全局规划路径上沿着积分距离搜索最接近机器人姿态的位姿的上界，将该值设小以防止捷径。
      # 如果设置为“-1”，将使用最大可能距离，在路径上搜索最近的路径点
      max_robot_pose_search_dist: 10.0
      # 启用在前瞻点选择时对姿态进行线性插值。导致产生更平滑的线性和角速度命令
      use_interpolation: false

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: True
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.22
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        # inflation_radius: 0.55
        inflation_radius: 0.35
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: True
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      robot_radius: 0.22
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        # inflation_radius: 0.55
        inflation_radius: 0.35
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: True
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: True

map_server:
  ros__parameters:
    use_sim_time: True
    yaml_filename: "turtlebot3_world.yaml"

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

# planner_server:
#   ros__parameters:
#     expected_planner_frequency: 20.0
#     use_sim_time: True
#     planner_plugins: ["GridBased"]
#     GridBased:
#       plugin: "nav2_navfn_planner/NavfnPlanner"
#       tolerance: 0.05
#       use_astar: false
#       allow_unknown: true

# planner_server_rclcpp_node:
#   ros__parameters:
#     use_sim_time: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "CustomGlobalPlanner"

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    # behavior_plugins: [ "wait","spin", "backup", "drive_on_heading"]
    behavior_plugins: [ "wait"]
    wait:
      plugin: "nav2_behaviors/Wait"
      wait_duration: 15.0  # 0表示无限等待，直到外部触发恢复
    # spin:
    #   plugin: "nav2_behaviors/Spin"
    # backup:
    #   plugin: "nav2_behaviors/BackUp"
    # drive_on_heading:
    #   plugin: "nav2_behaviors/DriveOnHeading"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200
